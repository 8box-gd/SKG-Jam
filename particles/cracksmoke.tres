[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://ct5nsfa651d2d"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_bc4ad"]
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_bc4ad"]
parameter_name = "DissolverTexture"
texture_type = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_kp61h"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_dmrtb"]
expanded_output_ports = [0]
texture = SubResource("NoiseTexture2D_kp61h")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_vy55h"]
function = 1

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_l3vqr"]
parameter_name = "TextureScale"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_uusta"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_bc4ad"]
parameter_name = "Albedo"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_kp61h"]
parameter_name = "SmokeNoise"
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_vy55h"]
source = 5
texture_type = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_toon, specular_toon;

uniform vec4 Albedo : source_color;
uniform sampler2D SmokeNoise : filter_nearest;
uniform vec2 TextureScale = vec2(1.000000, 1.000000);
uniform sampler2D DissolverTexture : source_color;
uniform sampler2D tex_frg_3;



void fragment() {
// ColorParameter:7
	vec4 n_out7p0 = Albedo;


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(SmokeNoise, UV);


// FloatOp:10
	float n_out10p0 = n_out7p0.x * n_out9p0.x;


// Vector2Parameter:5
	vec2 n_out5p0 = TextureScale;


// UVFunc:4
	vec2 n_in4p2 = vec2(0.00000, 0.00000);
	vec2 n_out4p0 = (UV - n_in4p2) * n_out5p0 + n_in4p2;


// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, n_out4p0);
	float n_out3p1 = n_out3p0.r;


// Input:6
	vec4 n_out6p0 = COLOR;
	float n_out6p4 = n_out6p0.a;


// Output:0
	ALBEDO = vec3(n_out10p0);
	ALPHA = n_out3p1;
	ALPHA_SCISSOR_THRESHOLD = n_out6p4;


}
"
modes/cull = 2
modes/diffuse = 3
modes/specular = 1
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_bc4ad")
nodes/fragment/2/position = Vector2(-380, 420)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_dmrtb")
nodes/fragment/3/position = Vector2(40, 460)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_vy55h")
nodes/fragment/4/position = Vector2(-320, 180)
nodes/fragment/5/node = SubResource("VisualShaderNodeVec2Parameter_l3vqr")
nodes/fragment/5/position = Vector2(-720, 160)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_uusta")
nodes/fragment/6/position = Vector2(-269.157, 951.026)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_bc4ad")
nodes/fragment/7/position = Vector2(-120, -240)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture2DParameter_kp61h")
nodes/fragment/8/position = Vector2(-460, -220)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_vy55h")
nodes/fragment/9/position = Vector2(-80, 20)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_bc4ad")
nodes/fragment/10/position = Vector2(220, -40)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 1, 0, 1, 5, 0, 4, 1, 4, 0, 3, 0, 6, 4, 0, 19, 8, 0, 9, 2, 7, 0, 10, 0, 9, 0, 10, 1, 10, 0, 0, 0)
